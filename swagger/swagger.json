{
    "swagger": "2.0",
    "info": {
        "title": "GoStock API.",
        "description": "GoStock backend API.",
        "version": "1.0.0",
        "contact": {
            "email": "alobaton@gmail.com"
        },
        "license": {}
    },
    "basePath": "/v1",
    "paths": {
        "/bills/": {
            "get": {
                "tags": [
                    "bills"
                ],
                "description": "Get bills.",
                "operationId": "BillsController.GetBills",
                "parameters": [
                    {
                        "in": "query",
                        "name": "from",
                        "description": "From date",
                        "schema": {
                            "$ref": "#/definitions/.Time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "to",
                        "description": "To date",
                        "schema": {
                            "$ref": "#/definitions/.Time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/.map[string]interface{}"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "bills"
                ],
                "description": "Create bill.",
                "operationId": "BillsController.CreateBill",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/.Bill"
                        }
                    }
                }
            }
        },
        "/bills/{bill_id}": {
            "get": {
                "tags": [
                    "bills"
                ],
                "description": "Get bill.",
                "operationId": "BillsController.GetBill",
                "parameters": [
                    {
                        "in": "path",
                        "name": "bill_id",
                        "description": "Bill id.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/.Bill"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "bills"
                ],
                "description": "Delete bill.",
                "operationId": "BillsController.DeleteBill",
                "parameters": [
                    {
                        "in": "path",
                        "name": "bill_id",
                        "description": "Bill id.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "bills"
                ],
                "description": "Update bill discount.",
                "operationId": "BillsController.UpdateDiscount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bill_id",
                        "description": "Bill id.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/.map[string]interface{}"
                        }
                    }
                }
            }
        },
        "/bills/{bill_id}/sales/{sale_id}": {
            "delete": {
                "tags": [
                    "bills"
                ],
                "description": "Remove sale from bill.",
                "operationId": "BillsController.RemoveSale",
                "parameters": [
                    {
                        "in": "path",
                        "name": "bill_id",
                        "description": "Bill id.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "sale_id",
                        "description": "Sale id.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "bills"
                ],
                "description": "Add sale to bill.",
                "operationId": "BillsController.AddSale",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "bill_id",
                        "description": "Bill id.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "sale_id",
                        "description": "Sale id.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ]
            }
        },
        "/caterings/": {
            "get": {
                "tags": [
                    "caterings"
                ],
                "description": "Get caterings.",
                "operationId": "CateringsController.GetCaterings",
                "parameters": [
                    {
                        "in": "query",
                        "name": "from",
                        "description": "From date",
                        "schema": {
                            "$ref": "#/definitions/.Time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "to",
                        "description": "To date",
                        "schema": {
                            "$ref": "#/definitions/.Time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/.map[string]interface{}"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "caterings"
                ],
                "description": "Create catering.",
                "operationId": "CateringsController.CreateCatering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Catering"
                        }
                    }
                }
            }
        },
        "/caterings/{catering_id}": {
            "get": {
                "tags": [
                    "caterings"
                ],
                "description": "Get catering.",
                "operationId": "CateringsController.GetCatering",
                "parameters": [
                    {
                        "in": "path",
                        "name": "catering_id",
                        "description": "Catering id.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Catering"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "caterings"
                ],
                "description": "Update catering.",
                "operationId": "CateringsController.UpdateCatering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "catering_id",
                        "description": "Catering id.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Catering"
                        }
                    }
                }
            }
        },
        "/customers/": {
            "get": {
                "tags": [
                    "customers"
                ],
                "description": "Get customer.",
                "operationId": "CustomersController.GetCustomer",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/auth0.Group"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "customers"
                ],
                "description": "Create customer.",
                "operationId": "CustomersController.CreateCustomer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/auth0.Group"
                        }
                    }
                }
            }
        },
        "/headquarters/": {
            "get": {
                "tags": [
                    "headquarters"
                ],
                "description": "Get headquarters.",
                "operationId": "HeadquartersController.GetHeadquarters",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/.map[string]interface{}"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "headquarters"
                ],
                "description": "Create headquarter.",
                "operationId": "HeadquartersController.CreateHeadquarter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Headquarter"
                        }
                    }
                }
            }
        },
        "/headquarters/{headquarter_id}": {
            "get": {
                "tags": [
                    "headquarters"
                ],
                "description": "Get headquarter.",
                "operationId": "HeadquartersController.GetHeadquarter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "headquarter_id",
                        "description": "Headquarter id.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Headquarter"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "headquarters"
                ],
                "description": "Delete headquarter.",
                "operationId": "HeadquartersController.DeleteHeadquarter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "headquarter_id",
                        "description": "Headquarter id.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "headquarters"
                ],
                "description": "Update headquarter.",
                "operationId": "HeadquartersController.UpdateHeadquarter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "headquarter_id",
                        "description": "Headquarter id.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Headquarter"
                        }
                    }
                }
            }
        },
        "/headquarters/{headquarter_id}/bills": {
            "get": {
                "tags": [
                    "headquarters"
                ],
                "description": "Get headquarter bills.",
                "operationId": "HeadquartersController.GetBills",
                "parameters": [
                    {
                        "in": "path",
                        "name": "headquarter_id",
                        "description": "Headquarter id.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "from",
                        "description": "From date",
                        "schema": {
                            "$ref": "#/definitions/.Time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "to",
                        "description": "To date",
                        "schema": {
                            "$ref": "#/definitions/.Time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/.map[string]interface{}"
                        }
                    }
                }
            }
        },
        "/headquarters/{headquarter_id}/products": {
            "get": {
                "tags": [
                    "headquarters"
                ],
                "description": "Get headquarter product.",
                "operationId": "HeadquartersController.GetProduct",
                "parameters": [
                    {
                        "in": "path",
                        "name": "headquarter_id",
                        "description": "Headquarter id.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "description": "Product name.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "brand",
                        "description": "Product brand.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "color",
                        "description": "Product color.",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/.map[string]interface{}"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "headquarters"
                ],
                "description": "Add product to headquarter.",
                "operationId": "HeadquartersController.AddProduct",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "headquarter_id",
                        "description": "Headquarter id.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.HeadquarterProduct"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "headquarters"
                ],
                "description": "Remove products from headquarter.",
                "operationId": "HeadquartersController.RemoveProducts",
                "parameters": [
                    {
                        "in": "path",
                        "name": "headquarter_id",
                        "description": "Headquarter id.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ]
            }
        },
        "/headquarters/{headquarter_id}/products/{product_id}": {
            "get": {
                "tags": [
                    "headquarters"
                ],
                "description": "Get headquarter product.",
                "operationId": "HeadquartersController.GetProduct",
                "parameters": [
                    {
                        "in": "path",
                        "name": "headquarter_id",
                        "description": "Headquarter id.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "product_id",
                        "description": "Product id.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.HeadquarterProduct"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "headquarters"
                ],
                "description": "Update headquarter product.",
                "operationId": "HeadquartersController.UpdateProduct",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "headquarter_id",
                        "description": "Headquarter id.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "product_id",
                        "description": "Product id.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.HeadquarterProduct"
                        }
                    }
                }
            }
        },
        "/products/": {
            "get": {
                "tags": [
                    "products"
                ],
                "description": "Get products.",
                "operationId": "ProductsController.GetProducts",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "Product name.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "brand",
                        "description": "Product brand.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "color",
                        "description": "Product color.",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/.map[string]interface{}"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "products"
                ],
                "description": "Create product.",
                "operationId": "ProductsController.CreateProduct",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Product"
                        }
                    }
                }
            }
        },
        "/products/brands": {
            "get": {
                "tags": [
                    "products"
                ],
                "description": "Get product brands.",
                "operationId": "ProductsController.GetBrands",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/.map[string]interface{}"
                        }
                    }
                }
            }
        },
        "/products/{catering_id}": {
            "delete": {
                "tags": [
                    "products"
                ],
                "description": "Delete catering.",
                "operationId": "ProductsController.DeleteCatering",
                "parameters": [
                    {
                        "in": "path",
                        "name": "catering_id",
                        "description": "Catering id.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ]
            }
        },
        "/products/{product_id}": {
            "get": {
                "tags": [
                    "products"
                ],
                "description": "Get product.",
                "operationId": "ProductsController.GetProduct",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "description": "Product id.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Product"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "products"
                ],
                "description": "Delete product.",
                "operationId": "ProductsController.DeleteProduct",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "description": "Product id.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "products"
                ],
                "description": "Update product.",
                "operationId": "ProductsController.UpdateProduct",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "description": "Product id.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Product"
                        }
                    }
                }
            }
        },
        "/providers/": {
            "get": {
                "tags": [
                    "providers"
                ],
                "description": "Get providers.",
                "operationId": "ProvidersController.GetProviders",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/.map[string]interface{}"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "providers"
                ],
                "description": "Create provider.",
                "operationId": "ProvidersController.CreateProvider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Provider"
                        }
                    }
                }
            }
        },
        "/providers/{provider_id}": {
            "get": {
                "tags": [
                    "providers"
                ],
                "description": "Get provider.",
                "operationId": "ProvidersController.GetProvider",
                "parameters": [
                    {
                        "in": "path",
                        "name": "provider_id",
                        "description": "Provider id.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Provider"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "providers"
                ],
                "description": "Delete provider.",
                "operationId": "ProvidersController.DeleteProvider",
                "parameters": [
                    {
                        "in": "path",
                        "name": "provider_id",
                        "description": "Provider id.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "providers"
                ],
                "description": "Update provider.",
                "operationId": "ProvidersController.UpdateProvider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "provider_id",
                        "description": "Provider id.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Provider"
                        }
                    }
                }
            }
        },
        "/users/": {
            "get": {
                "tags": [
                    "users"
                ],
                "description": "Get users.",
                "operationId": "UsersController.GetUsers",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/auth0.Members"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "users"
                ],
                "description": "Create user.",
                "operationId": "UsersController.CreateUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/auth0.User"
                        }
                    }
                }
            }
        },
        "/users/{user_id}": {
            "get": {
                "tags": [
                    "users"
                ],
                "description": "Get user.",
                "operationId": "UsersController.GetUser",
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "description": "User id.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/auth0.User"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "users"
                ],
                "description": "Delete user.",
                "operationId": "UsersController.DeleteUser",
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "description": "User id.",
                        "required": true,
                        "type": "string"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "users"
                ],
                "description": "Update user.",
                "operationId": "UsersController.UpdateUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "description": "User id.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/auth0.User"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        ".Bill": {
            "type": "object"
        },
        ".Time": {
            "type": "object"
        },
        ".false": {
            "type": "object"
        },
        ".map[string]interface{}": {
            "type": "object"
        },
        "auth0.Group": {
            "title": "Group",
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "auth0.Identity": {
            "title": "Identity",
            "type": "object",
            "properties": {
                "connection": {
                    "type": "string"
                },
                "isSocial": {
                    "type": "boolean"
                },
                "provider": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "auth0.Members": {
            "title": "Members",
            "type": "object",
            "properties": {
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/auth0.User"
                    }
                }
            }
        },
        "auth0.User": {
            "title": "User",
            "type": "object",
            "properties": {
                "app_metadata": {
                    "$ref": "#/definitions/15094.0xc420411fb0.false"
                },
                "connection": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "email_verified": {
                    "type": "boolean"
                },
                "identities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/auth0.Identity"
                    }
                },
                "nickname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "phone_verified": {
                    "type": "boolean"
                },
                "picture": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "user_metadata": {
                    "$ref": "#/definitions/14809.0xc420411ef0.false"
                },
                "username": {
                    "type": "string"
                },
                "verify_email": {
                    "type": "boolean"
                }
            }
        },
        "models.Catering": {
            "title": "Catering",
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer",
                    "format": "int64"
                },
                "created": {
                    "type": "string",
                    "format": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "product_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "provider_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "updated": {
                    "type": "string",
                    "format": "string"
                }
            }
        },
        "models.Headquarter": {
            "title": "Headquarter",
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "created": {
                    "type": "string",
                    "format": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "updated": {
                    "type": "string",
                    "format": "string"
                }
            }
        },
        "models.HeadquarterProduct": {
            "title": "HeadquarterProduct",
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer",
                    "format": "int64"
                },
                "created": {
                    "type": "string",
                    "format": "string"
                },
                "headquarter_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "product_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "updated": {
                    "type": "string",
                    "format": "string"
                }
            }
        },
        "models.Product": {
            "title": "Product",
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "created": {
                    "type": "string",
                    "format": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number",
                    "format": "double"
                },
                "updated": {
                    "type": "string",
                    "format": "string"
                }
            }
        },
        "models.Provider": {
            "title": "Provider",
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "created": {
                    "type": "string",
                    "format": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "updated": {
                    "type": "string",
                    "format": "string"
                }
            }
        }
    },
    "tags": [
        {
            "name": "customers",
            "description": "Customers API\n"
        },
        {
            "name": "users",
            "description": "Users API\n"
        },
        {
            "name": "headquarters",
            "description": "Headquarters API\n"
        },
        {
            "name": "bills",
            "description": "Bills API\n"
        },
        {
            "name": "products",
            "description": "Products API\n"
        },
        {
            "name": "caterings",
            "description": "Caterings API\n"
        },
        {
            "name": "providers",
            "description": "Providers API\n"
        }
    ]
}